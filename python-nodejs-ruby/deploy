#!/bin/bash -el

# Copyright 2015 tsuru authors. All rights reserved.
# Use of this source code is governed by a BSD-style
# license that can be found in the LICENSE file.

PARAMSZ=$@
SOURCE_DIR=/var/lib/tsuru

source ${SOURCE_DIR}/base/rc/config

case $1 in
	"development")
        cd /
        SOURCE_DIR=/var/lib/tsuru
        source ${SOURCE_DIR}/base/rc/config
        source ${SOURCE_DIR}/base/rc/os_dependencies
        os_dependencies
		shift;
		;;
	*)
        source ${SOURCE_DIR}/base/deploy
		;;
esac

if [ -f "${CURRENT_DIR}/.git_key" ]; then
    echo Installing git ssh Key
    mkdir -p ~/.ssh
    cp -f ${CURRENT_DIR}/.git_key ~/.ssh/id_rsa
    chmod 400 ~/.ssh/id_rsa
    echo "StrictHostKeyChecking no" >> ~/.ssh/config
elif [ -n "${ID_RSA}" ]; then 
    echo Installing git ssh Key from ENV var
    mkdir -p ~/.ssh
    if [ -f ~/.ssh/id_rsa ]; then
        rm -rf ~/.ssh/id_rsa
    fi
    echo "${ID_RSA}" > ~/.ssh/id_rsa
    chmod 400 ~/.ssh/id_rsa
    echo "StrictHostKeyChecking no" >> ~/.ssh/config
fi

if [ -f "${CURRENT_DIR}/.git_hosts" ]; then
    echo Running ssh-keyscan
    mkdir -p ~/.ssh
    for HOST in $(cat ${CURRENT_DIR}/.git_hosts; echo $GIT_HOSTS); do
        url=(${HOST//:/ })
        if [[ -n ${url[1]} ]]; then
            PORT="-p ${url[1]}"
        fi
        ssh-keyscan $PORT ${url[0]} >> ~/.ssh/known_hosts
    done
fi

if [ -n "${SSO_PUB}" ]; then 
    echo Installing sso_pub.key at ~/.sso_pub.key
    echo "${SSO_PUB}" > ~/.sso_pub.pem
fi

if [ -n "${PGPASS}" ]; then 
    echo Installing pgpass at ~/.pgpass
    echo -n "${PGPASS}" > ~/.pgpass
fi

for DEPLOY_FILE in ${SOURCE_DIR}/deploy-*; do
    echo Running ${DEPLOY_FILE} ${PARAMSZ}
    . ${DEPLOY_FILE} ${PARAMSZ}
done
